<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.0.xsd">
	<mvc:default-servlet-handler />
	<!-- 静态资源配置 -->
	<mvc:resources location="static/images/" mapping="static/images/**" />
	<mvc:resources location="static/js/" mapping="static/js/**" />
	<mvc:resources location="static/css/" mapping="static/css/**" />
	<!-- 静态资源配置 结束 -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<ref bean="stringHttpMessageConverter" />
			<ref bean="marshallingHttpMessageConverter" />
			<!-- <ref bean="mappingJackson2HttpMessageConverter" /> -->
			<ref bean="fastjson"/>
		</mvc:message-converters>
	</mvc:annotation-driven>
	<!-- 如果这个配置扫描 -->
	<context:component-scan base-package="com" />

	<!-- 拦截器 -->
	<mvc:interceptors>
		<!-- 多个拦截器,顺序执行 -->
		<bean
			class="com.ocean.springmvc.core.handler.authentication.rest.RestHandlerInterceptor">
			<!-- <property name="authentication"> <list> <bean></bean> </list> </property> -->
		</bean>
		<!-- <mvc:interceptor> 如果不配置或/**,将拦截所有的Controller <mvc:mapping path="/**" 
			/> 在Freemarker界面展示之前做一些通用处理 <bean class="xx.xxxx.core.web.FreeMarkerViewInterceptor"></bean> 
			</mvc:interceptor> -->
	</mvc:interceptors>


	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter" />
	<bean id="stringHttpMessageConverter"
		class="org.springframework.http.converter.StringHttpMessageConverter" />
	<bean id="marshallingHttpMessageConverter"
		class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
		<property name="marshaller" ref="castorMarshaller" />
		<property name="unmarshaller" ref="castorMarshaller" />
	</bean>
<!-- 
	<bean id="mappingJackson2HttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>application/json</value>
				<value>application/xml</value>
				<value>text/html</value>
				<value>text/plain</value>
				<value>text/xml</value>
			</list>
		</property>
	</bean> -->

	<bean id="castorMarshaller" class="org.springframework.oxm.castor.CastorMarshaller" />

	<bean id="fastjson"
		class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
		<property name="supportedMediaTypes" value="text/html;charset=UTF-8" />
		<property name="features">
			<array>
				<value>WriteMapNullValue</value>
				<value>WriteNullStringAsEmpty</value>
			</array>
		</property>
	</bean>

	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="order" value="1" />
		<!-- <property name="mediaTypes"> <map> <entry key="xml" value="application/xml" 
			/> <entry key="html" value="text/html" /> <entry key="json" value="application/json" 
			/> </map> </property> -->
		<property name="viewResolvers">
			<list>
				<ref bean="freeMarkerViewResolver" />
				<ref bean="jspViewResolver" />
			</list>
		</property>
		<property name="defaultViews">
			<list>
				<bean
					class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
			</list>
		</property>
	</bean>
	<!-- jsp视图解析器 -->
	<bean id="jspViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="2"></property>
	</bean>
	<bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape" />
	<!-- freemarker的配置 -->
	<bean id="freemarkerConfigurer"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF/freemarker/" />
		<property name="defaultEncoding" value="UTF-8" />
		<property name="freemarkerVariables">
			<map>
				<entry key="xml_escape" value-ref="fmXmlEscape" />
			</map>
		</property>
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">5</prop><!--刷新模板的周期，单位为秒 -->
				<prop key="default_encoding">UTF-8</prop><!--模板的编码格式 -->
				<prop key="locale">zh_CN</prop><!-- 本地化设置 -->
				<prop key="locale">UTF-8</prop>
				<prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
				<prop key="date_format">yyyy-MM-dd</prop>
				<!-- <prop key="number_format">#.##</prop> -->
				<prop key="time_format">HH:mm:ss</prop>
				<prop key="number_format">0.####</prop>
				<prop key="boolean_format">true,false</prop>
				<prop key="whitespace_stripping">true</prop>
				<prop key="tag_syntax">auto_detect</prop>
				<prop key="url_escaping_charset">UTF-8</prop>
			</props>
		</property>
	</bean>
	<!-- FreeMarker视图解析 在这里配置后缀名ftl和视图解析器。。 -->
	<bean id="freeMarkerViewResolver"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="order" value="1"></property>
		<property name="viewClass"
			value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" />
		<property name="suffix" value=".ftl" />
		<property name="contentType" value="text/html;charset=utf-8" />
		<property name="exposeRequestAttributes" value="true" />
		<property name="exposeSessionAttributes" value="true" />
		<property name="exposeSpringMacroHelpers" value="true" />
	</bean>


	<!--国际化 -->
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="defaultEncoding" value="UTF-8" />
		<property name="basenames">
			<list>
				<value>messages.welcome</value>
			</list>
		</property>
	</bean>

	<!--文件上传 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="100000" />
	</bean>

</beans>